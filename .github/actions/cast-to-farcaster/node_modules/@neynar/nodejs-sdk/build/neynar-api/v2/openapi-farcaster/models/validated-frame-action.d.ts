/**
 * Farcaster API V2
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { CastWithInteractions } from '@neynar/nodejs-sdk/build/neynar-api/v2/openapi-farcaster/models/cast-with-interactions';
import { FrameInput } from '@neynar/nodejs-sdk/build/neynar-api/v2/openapi-farcaster/models/frame-input';
import { FrameState } from '@neynar/nodejs-sdk/build/neynar-api/v2/openapi-farcaster/models/frame-state';
import { FrameTransaction } from '@neynar/nodejs-sdk/build/neynar-api/v2/openapi-farcaster/models/frame-transaction';
import { User } from '@neynar/nodejs-sdk/build/neynar-api/v2/openapi-farcaster/models/user';
import { ValidatedFrameActionSigner } from '@neynar/nodejs-sdk/build/neynar-api/v2/openapi-farcaster/models/validated-frame-action-signer';
import { ValidatedFrameActionTappedButton } from '@neynar/nodejs-sdk/build/neynar-api/v2/openapi-farcaster/models/validated-frame-action-tapped-button';
/**
 *
 * @export
 * @interface ValidatedFrameAction
 */
export interface ValidatedFrameAction {
    /**
     *
     * @type {string}
     * @memberof ValidatedFrameAction
     */
    'object': ValidatedFrameActionObjectEnum;
    /**
     *
     * @type {string}
     * @memberof ValidatedFrameAction
     */
    'url': string;
    /**
     *
     * @type {User}
     * @memberof ValidatedFrameAction
     */
    'interactor': User;
    /**
     *
     * @type {ValidatedFrameActionTappedButton}
     * @memberof ValidatedFrameAction
     */
    'tapped_button': ValidatedFrameActionTappedButton;
    /**
     *
     * @type {FrameInput}
     * @memberof ValidatedFrameAction
     */
    'input'?: FrameInput;
    /**
     *
     * @type {FrameState}
     * @memberof ValidatedFrameAction
     */
    'state': FrameState;
    /**
     *
     * @type {CastWithInteractions}
     * @memberof ValidatedFrameAction
     */
    'cast': CastWithInteractions;
    /**
     *
     * @type {string}
     * @memberof ValidatedFrameAction
     */
    'timestamp': string;
    /**
     *
     * @type {ValidatedFrameActionSigner}
     * @memberof ValidatedFrameAction
     */
    'signer'?: ValidatedFrameActionSigner;
    /**
     *
     * @type {FrameTransaction}
     * @memberof ValidatedFrameAction
     */
    'transaction'?: FrameTransaction;
    /**
     * The connected wallet address of the interacting user.
     * @type {string}
     * @memberof ValidatedFrameAction
     */
    'address'?: string;
}
export declare const ValidatedFrameActionObjectEnum: {
    readonly ValidatedFrameAction: "validated_frame_action";
};
export type ValidatedFrameActionObjectEnum = typeof ValidatedFrameActionObjectEnum[keyof typeof ValidatedFrameActionObjectEnum];
