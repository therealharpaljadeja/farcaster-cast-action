/**
 * Farcaster API V2
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { Configuration } from '../configuration';
import type { AxiosPromise, AxiosInstance, AxiosRequestConfig } from 'axios';
import { RequestArgs, BaseAPI } from '../base';
import { StorageAllocationsResponse } from '../models';
import { StorageUsageResponse } from '../models';
/**
 * StorageApi - axios parameter creator
 * @export
 */
export declare const StorageApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     * Fetches storage allocations for a given user
     * @summary Fetches storage allocations for a given user
     * @param {string} apiKey API key required for authentication.
     * @param {number} fid
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    storageAllocations: (apiKey: string, fid: number, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Fetches storage usage for a given user
     * @summary Fetches storage usage for a given user
     * @param {string} apiKey API key required for authentication.
     * @param {number} fid
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    storageUsage: (apiKey: string, fid: number, options?: AxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * StorageApi - functional programming interface
 * @export
 */
export declare const StorageApiFp: (configuration?: Configuration) => {
    /**
     * Fetches storage allocations for a given user
     * @summary Fetches storage allocations for a given user
     * @param {string} apiKey API key required for authentication.
     * @param {number} fid
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    storageAllocations(apiKey: string, fid: number, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<StorageAllocationsResponse>>;
    /**
     * Fetches storage usage for a given user
     * @summary Fetches storage usage for a given user
     * @param {string} apiKey API key required for authentication.
     * @param {number} fid
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    storageUsage(apiKey: string, fid: number, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<StorageUsageResponse>>;
};
/**
 * StorageApi - factory interface
 * @export
 */
export declare const StorageApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     * Fetches storage allocations for a given user
     * @summary Fetches storage allocations for a given user
     * @param {string} apiKey API key required for authentication.
     * @param {number} fid
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    storageAllocations(apiKey: string, fid: number, options?: any): AxiosPromise<StorageAllocationsResponse>;
    /**
     * Fetches storage usage for a given user
     * @summary Fetches storage usage for a given user
     * @param {string} apiKey API key required for authentication.
     * @param {number} fid
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    storageUsage(apiKey: string, fid: number, options?: any): AxiosPromise<StorageUsageResponse>;
};
/**
 * StorageApi - object-oriented interface
 * @export
 * @class StorageApi
 * @extends {BaseAPI}
 */
export declare class StorageApi extends BaseAPI {
    /**
     * Fetches storage allocations for a given user
     * @summary Fetches storage allocations for a given user
     * @param {string} apiKey API key required for authentication.
     * @param {number} fid
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof StorageApi
     */
    storageAllocations(apiKey: string, fid: number, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<StorageAllocationsResponse, any>>;
    /**
     * Fetches storage usage for a given user
     * @summary Fetches storage usage for a given user
     * @param {string} apiKey API key required for authentication.
     * @param {number} fid
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof StorageApi
     */
    storageUsage(apiKey: string, fid: number, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<StorageUsageResponse, any>>;
}
