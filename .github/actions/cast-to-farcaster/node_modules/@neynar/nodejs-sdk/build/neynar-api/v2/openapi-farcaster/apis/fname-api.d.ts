/**
 * Farcaster API V2
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { Configuration } from '../configuration';
import type { AxiosPromise, AxiosInstance, AxiosRequestConfig } from 'axios';
import { RequestArgs, BaseAPI } from '../base';
import { FnameAvailabilityResponse } from '../models';
/**
 * FnameApi - axios parameter creator
 * @export
 */
export declare const FnameApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     * Check if a given fname is available
     * @summary Check if a given fname is available
     * @param {string} apiKey API key required for authentication.
     * @param {string} fname
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    fnameAvailability: (apiKey: string, fname: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * FnameApi - functional programming interface
 * @export
 */
export declare const FnameApiFp: (configuration?: Configuration) => {
    /**
     * Check if a given fname is available
     * @summary Check if a given fname is available
     * @param {string} apiKey API key required for authentication.
     * @param {string} fname
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    fnameAvailability(apiKey: string, fname: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<FnameAvailabilityResponse>>;
};
/**
 * FnameApi - factory interface
 * @export
 */
export declare const FnameApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     * Check if a given fname is available
     * @summary Check if a given fname is available
     * @param {string} apiKey API key required for authentication.
     * @param {string} fname
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    fnameAvailability(apiKey: string, fname: string, options?: any): AxiosPromise<FnameAvailabilityResponse>;
};
/**
 * FnameApi - object-oriented interface
 * @export
 * @class FnameApi
 * @extends {BaseAPI}
 */
export declare class FnameApi extends BaseAPI {
    /**
     * Check if a given fname is available
     * @summary Check if a given fname is available
     * @param {string} apiKey API key required for authentication.
     * @param {string} fname
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FnameApi
     */
    fnameAvailability(apiKey: string, fname: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<FnameAvailabilityResponse, any>>;
}
